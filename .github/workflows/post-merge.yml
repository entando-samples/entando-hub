name: Post merge workflow
on:
  push:
    branches:
      - develop
      - release/*
env: 
  SKIP_DEPLOY: ${{ vars.SKIP_DEPLOY }}
  PROFILE_NAME: ${{ vars.PROFILE_NAME }}
  ENTANDO_APP_NAME: ${{ vars.ENTANDO_APP_NAME }}
  ENTANDO_NAMESPACE: ${{ vars.ENTANDO_NAMESPACE }}

jobs:
  app-build:
    runs-on: ubuntu-latest
    container:
      image: entando/ent:v7.1.3
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: registry.hub.docker.com
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Pack the application bundle
        id: pack
        env:
          DOCKER_ORG: entando
        run: |
          versionSuffix=SNAPSHOT
          bash ../.github/functions/utils.sh setBundleVersion -$versionSuffix
          bash ../.github/functions/utils.sh setComponentVersions -$versionSuffix
          ent --debug bundle pack --org $DOCKER_ORG --stdout --fail-fast
          ent --debug bundle publish
          version=$(bash ../.github/functions/utils.sh getBundleImage)
          echo "VERSION=$version" >> $GITHUB_OUTPUT
        working-directory: ./application
      - uses: redhat-actions/oc-installer@v1
        if: ${{ env.SKIP_DEPLOY == 'false' }}
      - name: Cluster Login
        if: ${{ env.SKIP_DEPLOY == 'false' }}
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}
      - name: Deploy on EntandoApp 
        id: deploy 
        if: ${{ env.SKIP_DEPLOY == 'false' }}
        run: |
          ent profile new $PROFILE_NAME $ENTANDO_APP_NAME $ENTANDO_NAMESPACE
          ent profile use $PROFILE_NAME
          ent ecr deploy --repo=docker://entando/entando-hub-application
        working-directory: ./application 
  
  layout-build:
    runs-on: ubuntu-latest
    container:
      image: entando/ent:v7.1.3
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: registry.hub.docker.com
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Pack the layout bundle
        id: pack
        env:
          DOCKER_ORG: entando
        run: |
          versionSuffix=SNAPSHOT
          bash ../.github/functions/utils.sh setBundleVersion -$versionSuffix
          sh set-bundle-id.sh $DOCKER_ORG
          ent --debug bundle pack --org $DOCKER_ORG --stdout
          ent --debug bundle publish
          version=$(bash ../.github/functions/utils.sh getBundleImage)
          echo "VERSION=$version" >> $GITHUB_OUTPUT
        working-directory: ./content
      - uses: redhat-actions/oc-installer@v1
        if: ${{ env.SKIP_DEPLOY == 'false' }}
      - name: Cluster Login
        if: ${{ env.SKIP_DEPLOY == 'false' }}
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}
      - name: Deploy on EntandoApp 
        id: deploy 
        if: ${{ env.SKIP_DEPLOY == 'false' }}
        run: |
          ent profile new $PROFILE_NAME $ENTANDO_APP_NAME $ENTANDO_NAMESPACE
          ent profile use $PROFILE_NAME
          ent ecr deploy --repo=docker://entando/entando-hub-content
        working-directory: ./content
  
  static-analysis:
    uses: ./.github/workflows/static-analysis.yml
    with:
     versionSuffix: SNAPSHOT
     SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}